// <auto-generated />
using System;
using Intelligreen.Aplicacion;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intelligreen.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212230146_SqlMotorChange")]
    partial class SqlMotorChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Intelligreen.Dominio.Dispositivo", b =>
                {
                    b.Property<Guid>("DispositivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CircuitoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DispositivoId");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("Intelligreen.Dominio.Planta", b =>
                {
                    b.Property<Guid>("PlantaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cuidados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dificultad")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxHumedadAmb")
                        .HasColumnType("float");

                    b.Property<double>("MaxHumedadSuelo")
                        .HasColumnType("float");

                    b.Property<double>("MaxTempAmb")
                        .HasColumnType("float");

                    b.Property<double>("MinHumedadAmb")
                        .HasColumnType("float");

                    b.Property<double>("MinHumedadSuelo")
                        .HasColumnType("float");

                    b.Property<double>("MinTempAmb")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantaId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("Intelligreen.Dominio.PlantaUsuario", b =>
                {
                    b.Property<Guid>("PlantaUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DispositivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlantaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlantaUsuarioId");

                    b.HasIndex("DispositivoId");

                    b.HasIndex("PlantaId");

                    b.ToTable("PlantasUsuarios");
                });

            modelBuilder.Entity("Intelligreen.Dominio.PlantaUsuario", b =>
                {
                    b.HasOne("Intelligreen.Dominio.Dispositivo", "Dispositivo")
                        .WithMany("PlantaUsuarios")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Intelligreen.Dominio.Planta", "Planta")
                        .WithMany("PlantaUsuarios")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("Intelligreen.Dominio.Dispositivo", b =>
                {
                    b.Navigation("PlantaUsuarios");
                });

            modelBuilder.Entity("Intelligreen.Dominio.Planta", b =>
                {
                    b.Navigation("PlantaUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
